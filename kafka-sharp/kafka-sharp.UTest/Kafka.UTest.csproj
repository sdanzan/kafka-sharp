<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{590EC259-ACC6-4AB4-931C-9498E6152689}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>tests_kafka_sharp</RootNamespace>
    <AssemblyName>Kafka.UTest</AssemblyName>
    <FileAlignment>512</FileAlignment>
    <SolutionDir Condition="$(SolutionDir) == '' Or $(SolutionDir) == '*Undefined*'">..\..\..\..\</SolutionDir>
    <RestorePackages>true</RestorePackages>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <PlatformTarget>AnyCPU</PlatformTarget>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Moq">
      <HintPath>$(SolutionDir)\packages\Moq.4.5.3\lib\net45\Moq.dll</HintPath>
    </Reference>
    <Reference Include="nunit.framework">
      <HintPath>$(SolutionDir)\packages\NUnit.2.6.4\lib\nunit.framework.dll</HintPath>
    </Reference>
    <Reference Include="nunit-console">
      <HintPath>$(SolutionDir)\packages\NUnit.Runners.2.6.2\tools\nunit-console.exe</HintPath>
    </Reference>
    <Reference Include="nunit-console-runner">
      <HintPath>$(SolutionDir)\packages\NUnit.Runners.2.6.2\tools\lib\nunit-console-runner.dll</HintPath>
    </Reference>
    <Reference Include="nunit.core">
      <HintPath>$(SolutionDir)\packages\NUnit.Runners.2.6.2\tools\lib\nunit.core.dll</HintPath>
    </Reference>
    <Reference Include="nunit.core.interfaces.dll">
      <HintPath>$(SolutionDir)\packages\NUnit.Runners.2.6.2\tools\lib\nunit.core.interfaces.dll</HintPath>
    </Reference>
    <Reference Include="nunit.util">
      <HintPath>$(SolutionDir)\packages\NUnit.Runners.2.6.2\tools\lib\nunit.util.dll</HintPath>
    </Reference>
    <Reference Include="nunit-agent.exe">
      <HintPath>$(SolutionDir)\packages\NUnit.Runners.2.6.2\tools\nunit-agent.exe</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="System.Reactive.Core">
      <HintPath>$(SolutionDir)\packages\System.Reactive.Core.3.0.0\lib\net45\System.Reactive.Core.dll</HintPath>
    </Reference>
    <Reference Include="System.Reactive.Interfaces">
      <HintPath>$(SolutionDir)\packages\System.Reactive.Interfaces.3.0.0\lib\net45\System.Reactive.Interfaces.dll</HintPath>
    </Reference>
    <Reference Include="System.Reactive.Linq">
      <HintPath>$(SolutionDir)\packages\System.Reactive.Linq.3.0.0\lib\net45\System.Reactive.Linq.dll</HintPath>
    </Reference>
    <Reference Include="System.Reactive.PlatformServices">
      <HintPath>$(SolutionDir)\packages\System.Reactive.PlatformServices.3.0.0\lib\net45\System.Reactive.PlatformServices.dll</HintPath>
    </Reference>
    <Reference Include="System.Xml.Linq" />
    <Reference Include="System.Data.DataSetExtensions" />
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="System.Data" />
    <Reference Include="System.Xml" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="TestBatching.cs" />
    <Compile Include="TestClient.cs" />
    <Compile Include="TestConsumerGroup.cs" />
    <Compile Include="TestSerialization.cs" />
    <Compile Include="AsyncCountdownEvent.cs" />
    <Compile Include="Mocks.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="TestCluster.cs" />
    <Compile Include="TestCommon.cs" />
    <Compile Include="TestConnection.cs" />
    <Compile Include="TestConsumer.cs" />
    <Compile Include="TestGeneral.cs" />
    <Compile Include="TestPartitioner.cs" />
    <Compile Include="TestNode.cs.cs" />
    <Compile Include="TestRouter.cs" />
    <Compile Include="TestRoutingTable.cs" />
  </ItemGroup>
  <ItemGroup>
    <None Include="packages.config" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\kafka-sharp\Kafka.csproj">
      <Project>{bb2eb756-2bbf-4895-a1f3-09d34375f64e}</Project>
      <Name>Kafka</Name>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(SolutionDir)\.cbs\moab.targets" Condition="Exists('$(SolutionDir)\.cbs\moab.targets')" />
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <Import Project="$(SolutionDir)\.cbs\Checks.targets" Condition="Exists('$(SolutionDir)\.cbs\Checks.targets')" />
  <Import Project="$(CBS_DIR)\MSBuild\targets\Criteo.CSharp.targets" Condition="Exists('$(CBS_DIR)\MSBuild\targets\Criteo.CSharp.targets')" />
  <Import Project="$(SolutionDir)\.nuget\NuGet.targets" Condition="Exists('$(SolutionDir)\.nuget\NuGet.targets')" />
  <Target Name="EnsureNuGetPackageBuildImports" BeforeTargets="PrepareForBuild">
    <PropertyGroup>
      <ErrorText>This project references NuGet package(s) that are missing on this computer. Enable NuGet Package Restore to download them.  For more information, see http://go.microsoft.com/fwlink/?LinkID=322105. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition="!Exists('$(SolutionDir)\.nuget\NuGet.targets')" Text="$([System.String]::Format('$(ErrorText)', '$(SolutionDir)\.nuget\NuGet.targets'))" />
  </Target>
  <Target Name="ConfigurePublish" BeforeTargets="PublishApp">
    <ItemGroup>
       <PublishDir Include="$(OutputPath)"/>
    </ItemGroup>
  </Target>
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
</Project>
